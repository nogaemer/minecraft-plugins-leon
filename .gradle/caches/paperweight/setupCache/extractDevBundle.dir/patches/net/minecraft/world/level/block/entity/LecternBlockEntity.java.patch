--- a/net/minecraft/world/level/block/entity/LecternBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/LecternBlockEntity.java
@@ -24,13 +24,72 @@
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.phys.Vec2;
 import net.minecraft.world.phys.Vec3;
+// CraftBukkit start
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+import org.bukkit.Location;
+import org.bukkit.block.Lectern;
+import org.bukkit.craftbukkit.v1_20_R1.entity.CraftHumanEntity;
+import org.bukkit.craftbukkit.v1_20_R1.util.CraftLocation;
+import org.bukkit.entity.HumanEntity;
+import org.bukkit.inventory.InventoryHolder;
+// CraftBukkit end
+
+public class LecternBlockEntity extends BlockEntity implements Clearable, MenuProvider, CommandSource { // CraftBukkit - ICommandListener
 
-public class LecternBlockEntity extends BlockEntity implements Clearable, MenuProvider {
     public static final int DATA_PAGE = 0;
     public static final int NUM_DATA = 1;
     public static final int SLOT_BOOK = 0;
     public static final int NUM_SLOTS = 1;
-    public final Container bookAccess = new Container() {
+    // CraftBukkit start - add fields and methods
+    public final Container bookAccess = new LecternInventory();
+    public class LecternInventory implements Container {
+
+        public List<HumanEntity> transaction = new ArrayList<>();
+        private int maxStack = 1;
+
+        @Override
+        public List<ItemStack> getContents() {
+            return Arrays.asList(book);
+        }
+
+        @Override
+        public void onOpen(CraftHumanEntity who) {
+            this.transaction.add(who);
+        }
+
+        @Override
+        public void onClose(CraftHumanEntity who) {
+            this.transaction.remove(who);
+        }
+
+        @Override
+        public List<HumanEntity> getViewers() {
+            return this.transaction;
+        }
+
+        @Override
+        public void setMaxStackSize(int i) {
+            this.maxStack = i;
+        }
+
+        @Override
+        public Location getLocation() {
+            if (level == null) return null;
+            return CraftLocation.toBukkit(worldPosition, level.getWorld());
+        }
+
+        @Override
+        public InventoryHolder getOwner() {
+            return (Lectern) LecternBlockEntity.this.getOwner();
+        }
+
+        public LecternBlockEntity getLectern() {
+            return LecternBlockEntity.this;
+        }
+        // CraftBukkit end
+
         @Override
         public int getContainerSize() {
             return 1;
@@ -49,12 +108,13 @@
         @Override
         public ItemStack removeItem(int slot, int amount) {
             if (slot == 0) {
-                ItemStack itemStack = LecternBlockEntity.this.book.split(amount);
+                ItemStack itemstack = LecternBlockEntity.this.book.split(amount);
+
                 if (LecternBlockEntity.this.book.isEmpty()) {
                     LecternBlockEntity.this.onBookItemRemove();
                 }
 
-                return itemStack;
+                return itemstack;
             } else {
                 return ItemStack.EMPTY;
             }
@@ -63,22 +123,31 @@
         @Override
         public ItemStack removeItemNoUpdate(int slot) {
             if (slot == 0) {
-                ItemStack itemStack = LecternBlockEntity.this.book;
+                ItemStack itemstack = LecternBlockEntity.this.book;
+
                 LecternBlockEntity.this.book = ItemStack.EMPTY;
                 LecternBlockEntity.this.onBookItemRemove();
-                return itemStack;
+                return itemstack;
             } else {
                 return ItemStack.EMPTY;
             }
         }
 
         @Override
+        // CraftBukkit start
         public void setItem(int slot, ItemStack stack) {
+            if (slot == 0) {
+                LecternBlockEntity.this.setBook(stack);
+                if (LecternBlockEntity.this.getLevel() != null) {
+                    LecternBlock.resetBookState(null, LecternBlockEntity.this.getLevel(), LecternBlockEntity.this.getBlockPos(), LecternBlockEntity.this.getBlockState(), LecternBlockEntity.this.hasBook());
+                }
+            }
         }
+        // CraftBukkit end
 
         @Override
         public int getMaxStackSize() {
-            return 1;
+            return this.maxStack; // CraftBukkit
         }
 
         @Override
@@ -97,8 +166,7 @@
         }
 
         @Override
-        public void clearContent() {
-        }
+        public void clearContent() {}
     };
     private final ContainerData dataAccess = new ContainerData() {
         @Override
@@ -119,12 +187,13 @@
             return 1;
         }
     };
-    ItemStack book = ItemStack.EMPTY;
+    ItemStack book;
     int page;
     private int pageCount;
 
     public LecternBlockEntity(BlockPos pos, BlockState state) {
         super(BlockEntityType.LECTERN, pos, state);
+        this.book = ItemStack.EMPTY;
     }
 
     public ItemStack getBook() {
@@ -136,13 +205,13 @@
     }
 
     public void setBook(ItemStack book) {
-        this.setBook(book, (Player)null);
+        this.setBook(book, (Player) null);
     }
 
     void onBookItemRemove() {
         this.page = 0;
         this.pageCount = 0;
-        LecternBlock.resetBookState((Entity)null, this.getLevel(), this.getBlockPos(), this.getBlockState(), false);
+        LecternBlock.resetBookState((Entity) null, this.getLevel(), this.getBlockPos(), this.getBlockState(), false);
     }
 
     public void setBook(ItemStack book, @Nullable Player player) {
@@ -153,11 +222,12 @@
     }
 
     public void setPage(int currentPage) {
-        int i = Mth.clamp(currentPage, 0, this.pageCount - 1);
-        if (i != this.page) {
-            this.page = i;
+        int j = Mth.clamp(currentPage, 0, this.pageCount - 1);
+
+        if (j != this.page) {
+            this.page = j;
             this.setChanged();
-            LecternBlock.signalPageChange(this.getLevel(), this.getBlockPos(), this.getBlockState());
+            if (this.level != null) LecternBlock.signalPageChange(this.getLevel(), this.getBlockPos(), this.getBlockState()); // CraftBukkit
         }
 
     }
@@ -167,7 +237,8 @@
     }
 
     public int getRedstoneSignal() {
-        float f = this.pageCount > 1 ? (float)this.getPage() / ((float)this.pageCount - 1.0F) : 1.0F;
+        float f = this.pageCount > 1 ? (float) this.getPage() / ((float) this.pageCount - 1.0F) : 1.0F;
+
         return Mth.floor(f * 14.0F) + (this.hasBook() ? 1 : 0);
     }
 
@@ -179,19 +250,48 @@
         return book;
     }
 
+    // CraftBukkit start
+    @Override
+    public void sendSystemMessage(Component message) {
+    }
+
+    @Override
+    public org.bukkit.command.CommandSender getBukkitSender(CommandSourceStack wrapper) {
+        return wrapper.getEntity() != null ? wrapper.getEntity().getBukkitSender(wrapper) : new org.bukkit.craftbukkit.v1_20_R1.command.CraftBlockCommandSender(wrapper, this);
+    }
+
+    @Override
+    public boolean acceptsSuccess() {
+        return false;
+    }
+
+    @Override
+    public boolean acceptsFailure() {
+        return false;
+    }
+
+    @Override
+    public boolean shouldInformAdmins() {
+        return false;
+    }
+
+    // CraftBukkit end
     private CommandSourceStack createCommandSourceStack(@Nullable Player player) {
-        String string;
-        Component component;
+        String s;
+        Object object;
+
         if (player == null) {
-            string = "Lectern";
-            component = Component.literal("Lectern");
+            s = "Lectern";
+            object = Component.literal("Lectern");
         } else {
-            string = player.getName().getString();
-            component = player.getDisplayName();
+            s = player.getName().getString();
+            object = player.getDisplayName();
         }
 
-        Vec3 vec3 = Vec3.atCenterOf(this.worldPosition);
-        return new CommandSourceStack(CommandSource.NULL, vec3, Vec2.ZERO, (ServerLevel)this.level, 2, string, component, this.level.getServer(), player);
+        Vec3 vec3d = Vec3.atCenterOf(this.worldPosition);
+
+        // CraftBukkit - this
+        return new CommandSourceStack(this, vec3d, Vec2.ZERO, (ServerLevel) this.level, 2, s, (Component) object, this.level.getServer(), player);
     }
 
     @Override
@@ -203,7 +303,7 @@
     public void load(CompoundTag nbt) {
         super.load(nbt);
         if (nbt.contains("Book", 10)) {
-            this.book = this.resolveBook(ItemStack.of(nbt.getCompound("Book")), (Player)null);
+            this.book = this.resolveBook(ItemStack.of(nbt.getCompound("Book")), (Player) null);
         } else {
             this.book = ItemStack.EMPTY;
         }
@@ -229,7 +329,7 @@
 
     @Override
     public AbstractContainerMenu createMenu(int syncId, Inventory playerInventory, Player player) {
-        return new LecternMenu(syncId, this.bookAccess, this.dataAccess);
+        return new LecternMenu(syncId, this.bookAccess, this.dataAccess, playerInventory); // CraftBukkit
     }
 
     @Override
