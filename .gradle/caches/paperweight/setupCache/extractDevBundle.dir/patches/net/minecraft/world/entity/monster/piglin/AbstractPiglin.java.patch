--- a/net/minecraft/world/entity/monster/piglin/AbstractPiglin.java
+++ b/net/minecraft/world/entity/monster/piglin/AbstractPiglin.java
@@ -23,6 +23,7 @@
 import net.minecraft.world.level.pathfinder.BlockPathTypes;
 
 public abstract class AbstractPiglin extends Monster {
+
     protected static final EntityDataAccessor<Boolean> DATA_IMMUNE_TO_ZOMBIFICATION = SynchedEntityData.defineId(AbstractPiglin.class, EntityDataSerializers.BOOLEAN);
     protected static final int CONVERSION_TIME = 300;
     protected static final float PIGLIN_EYE_HEIGHT = 1.79F;
@@ -38,7 +39,7 @@
 
     private void applyOpenDoorsAbility() {
         if (GoalUtils.hasGroundPathNavigation(this)) {
-            ((GroundPathNavigation)this.getNavigation()).setCanOpenDoors(true);
+            ((GroundPathNavigation) this.getNavigation()).setCanOpenDoors(true);
         }
 
     }
@@ -51,17 +52,17 @@
     protected abstract boolean canHunt();
 
     public void setImmuneToZombification(boolean immuneToZombification) {
-        this.getEntityData().set(DATA_IMMUNE_TO_ZOMBIFICATION, immuneToZombification);
+        this.getEntityData().set(AbstractPiglin.DATA_IMMUNE_TO_ZOMBIFICATION, immuneToZombification);
     }
 
     public boolean isImmuneToZombification() {
-        return this.getEntityData().get(DATA_IMMUNE_TO_ZOMBIFICATION);
+        return (Boolean) this.getEntityData().get(AbstractPiglin.DATA_IMMUNE_TO_ZOMBIFICATION);
     }
 
     @Override
     protected void defineSynchedData() {
         super.defineSynchedData();
-        this.entityData.define(DATA_IMMUNE_TO_ZOMBIFICATION, false);
+        this.entityData.define(AbstractPiglin.DATA_IMMUNE_TO_ZOMBIFICATION, false);
     }
 
     @Override
@@ -97,7 +98,7 @@
 
         if (this.timeInOverworld > 300) {
             this.playConvertedSound();
-            this.finishConversion((ServerLevel)this.level());
+            this.finishConversion((ServerLevel) this.level());
         }
 
     }
@@ -107,10 +108,16 @@
     }
 
     protected void finishConversion(ServerLevel world) {
-        ZombifiedPiglin zombifiedPiglin = this.convertTo(EntityType.ZOMBIFIED_PIGLIN, true);
-        if (zombifiedPiglin != null) {
-            zombifiedPiglin.addEffect(new MobEffectInstance(MobEffects.CONFUSION, 200, 0));
+        ZombifiedPiglin entitypigzombie = (ZombifiedPiglin) this.convertTo(EntityType.ZOMBIFIED_PIGLIN, true, org.bukkit.event.entity.EntityTransformEvent.TransformReason.PIGLIN_ZOMBIFIED, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.PIGLIN_ZOMBIFIED); // CraftBukkit - add spawn and transform reasons
+
+        if (entitypigzombie != null) {
+            entitypigzombie.addEffect(new MobEffectInstance(MobEffects.CONFUSION, 200, 0));
+        }
+        // Paper start - reset to prevent event spam
+        else {
+            this.timeInOverworld = 0;
         }
+        // Paper end
 
     }
 
@@ -123,7 +130,7 @@
     @Nullable
     @Override
     public LivingEntity getTarget() {
-        return this.brain.getMemory(MemoryModuleType.ATTACK_TARGET).orElse((LivingEntity)null);
+        return (LivingEntity) this.brain.getMemory(MemoryModuleType.ATTACK_TARGET).orElse(null); // CraftBukkit - decompile error
     }
 
     protected boolean isHoldingMeleeWeapon() {
